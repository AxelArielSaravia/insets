:root {

    --color-dark-base: #060606;
    --color-dark-bg: #121212;
    --color-dark-btn: #282525;
    --color-dark-hover: #3c3838;

    --color-light-base: #f9f9f9;
    --color-light-bg: #eadfdf;
    --color-light-btn: #e0d2d2;
    --color-light-hover: #a89999;

    --color-dark-pink1: #3c008b;
    --color-dark-pink2: #551a8b;
    --color-dark-pink2-a: #551a8b33;
    --color-light-pink1: #ff99cd;
    --color-light-pink2: #ffc0e0;
    --color-light-pink2-a: #ffc0e033;


    --color-base: var(--color-dark-base);
    --color-bg: var(--color-dark-bg);
    --color-text: var(--color-light-bg);
    --color-btn: var(--color-dark-btn);
    --color-hover: var(--color-dark-hover);
    --color-text-hover: var(--color-light-pink2);
    --color-highlight: var(--color-light-pink2-a);
    --color-select: var(--color-light-pink1);

    --scrollbar-bg: var(--color-btn) var(--color-bg);
    --scrollbar-base: var(--color-btn) var(--color-base);

    --fallback-fonts: Helvetica Neue, helvetica, arial, Hiragino Kaku Gothic ProN, Meiryo, MS Gothic;
    --font: var(--fallback-fonts, sans-serif);

    --font-size: 1rem;
    --font-size-buttons: 0.9rem;
    --font-size-config-menu: 0.9rem;
    --font-size-config-buttons: 0.8rem;

    --visual-radius: 5px;

    --menu-icon-size: 2.5ch;
    --icon-size: 1ch;

    --gap: 1ch;
    --border-radius-bg: 1ch;

    accent-color: var(--color-text);
    color-scheme: dark;
}

/*@start: theme*/
@media (prefers-color-scheme: dark) {
    :root[data-theme=light] {
        --color-base: var(--color-light-base);
        --color-bg: var(--color-light-bg);
        --color-text: var(--color-dark-bg);
        --color-btn: var(--color-light-btn);
        --color-hover: var(--color-light-hover);
        --color-text-hover: var(--color-dark-pink2);
        --color-highlight: var(--color-dark-pink2-a);
        --color-select: var(--color-dark-pink1);
        color-scheme: light;
    }
    :root:not([data-theme=light]) .theme-switcher .lucide-moon,
    :root[data-theme=light] .theme-switcher .lucide-sun {
        display: none;
    }
}

@media not (prefers-color-scheme: dark) {
    :root {
        --color-base: var(--color-light-base);
        --color-bg: var(--color-light-bg);
        --color-text: var(--color-dark-bg);
        --color-btn: var(--color-light-btn);
        --color-hover: var(--color-light-hover);
        --color-text-hover: var(--color-dark-pink2);
        --color-highlight: var(--color-dark-pink2-a);
        --color-select: var(--color-dark-pink1);
        color-scheme: light;
    }
    :root[data-theme=dark] {
        --color-base: var(--color-dark-base);
        --color-bg: var(--color-dark-bg);
        --color-text: var(--color-light-bg);
        --color-btn: var(--color-dark-btn);
        --color-hover: var(--color-dark-hover);
        --color-select: var(--color-light-pink1);
        --color-text-hover: var(--color-light-pink2);
        --color-highlight: var(--color-light-pink2-a);
        color-scheme: dark;
    }
    :root:not([data-theme=dark]) .theme-switcher .lucide-sun,
    :root[data-theme=dark] .theme-switcher .lucide-moon {
        display: none;
    }
}
/*@end: theme*/

/*@start: default*/
label,input, select, option {
    cursor: pointer;
}

input[type="range"] {
    height: 4px;
}
input[type="range"]:focus-visible {
    outline-offset: 1ch;
    border-radius: var(--visual-radius);
}

.button,
button {
    box-sizing: border-box;
    margin: 0;
    background: var(--color-btn);
    color: inherit;

    font-family: var(--font);
    font-size: var(--font-size-buttons);
    font-weight: bold;

    cursor: pointer;

    border: none;
    border-radius: .5ch;

    position: relative;
    line-height: inherit;
}

.button::after,
button::after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
}

a {
    color: var(--color-text);
    border-radius: var(--visual-radius);
    font-size: var(--font-size);
}

:where(a, button, summary, input[type="range"], select):focus-visible {
    outline: 2px solid var(--color-select);
}

h1 {
    font-size: 1.5em;
}

h1, h2, h3, h4, p, span {
    margin: 0;
    font-weight: bold;
}

@media (hover: hover) and (pointer: fine){
    a:hover {
        color: var(--color-text-hover);
    }
    .button:hover,
    button:hover {
        color: var(--color-text-hover);
        background: var(--color-hover);
    }
    input[type="range"]:hover {
        accent-color: var(--color-select);
    }
}

@media not (prefers-reduced-motion) {
    .button,
    button,
    a,
    summary{
        transition: background 200ms ease-in-out,
                    color 200ms ease-in-out;
    }
}
/*@end: defaults*/

/*@start: base*/
body {
    margin: 0;
    padding: 0;

    display: flex;
    flex-direction: column;

    width: 100%;
    height: 100vh;

    font-family: var(--font);
    font-weight: normal;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background-color:var(--color-base);
    color: var(--color-text);

    -webkit-tap-highlight-color: var(--color-highlight);
    user-select: none;
    touch-action: none;
}

body>main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

body>main[data-app="0"] .app,
body>main[data-app="1"] .presentation {
    display: none
}

/*@end: base*/

/*@start: components*/
.button-text {
    padding: .5ch 1ch;
}
.button-icon {
    display: flex;
    align-items: center;
    padding: .5ch;
}

.button-icon-text {
    display: flex;
    align-items: center;
    gap: 0.5ch;
    padding: .5ch 1ch;
}

.checkboxes {
    display:flex;
    flex-wrap: wrap;
    gap: 1ch;
    border: none;
    margin: 0;
    padding: 0;
}

.checkbox, .b-file {
    position: relative;
}

.checkbox>span {
    display: flex;
    align-items: center;
    gap: 0.5ch;
}

.checkbox input:focus-visible+span {
    outline: 2px solid var(--color-select);
}

.checkbox input:not(:checked)+span {
    opacity: 0.6;
}

.checkbox .icon-checkbox {
    width: 1.2ch;
    height: 1.2ch;
}

.checkbox input:not(:checked)+span svg {
    fill: none;
}

.scroll-buttons {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1ch;
    text-align: center;
}

.scroll-buttons button {
    display: flex;
    align-items: center;
}
.scroll-buttons p {
    width: 3ch;
}

.scroll-buttons button .icon {
    width: 1.5ch;
    height: 1.5ch;
}

.scroll-buttons button.left .icon {
    transform: rotate(-.25turn);
}

.scroll-buttons button.right .icon {
    transform: rotate(.25turn);
}

.range-number {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-width: 2cap;
}
.range-number button {
    width: 100%;
    justify-content: center;
}
.range-number .icon {
    width: 1.5ch;
    height: 1.5ch;
}

.range-number .down {
    transform: rotate(180deg);
}
/*@end: App components*/

/*@start: presentation*/
.presentation {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 1ch;
    background: var(--color-bg);
}

.presentation header {
    display: flex;
    text-align: center;
    flex-direction: column;
    align-items: center;

    padding: 2ch 0;
}
.presentation :where(a,p) {
    line-height: 2;
}


@media (scripting: none) {
    .presentation button {
        display: none;
    }
}
/*@end: presentation*/

/*@start: App elements*/
.drop-area {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    background: var(--color-bg);
    opacity: 0.5;
    z-index: 5;
}

.drop-area::after {
    content: "";
    display: block;
    position: absolute;
    inset: auto;
    width: 100%;
    height: 100%;
}
div.app {
    position: relative;
    overflow: hidden;
    flex-grow: 1;

    display: grid;
    grid-template-columns: minmax(0, 1fr) auto;
    grid-template-rows: auto 1fr auto;

    padding: 1ch;
}

div.app .audio-container,
div.app .configuration .effects,
div.app .panel [name="title"]{
    box-sizing: border-box;
    overflow: auto;
    scroll-behavior: smooth;
}

div.app .audio-container,
div.app .configuration {
    scrollbar-color: var(--scrollbar-bg);
}
div.app .panel [name="title"]{
    scrollbar-color: var(--scrollbar-base);
}


div.app .menu {
    grid-row: 1;
    grid-column: 1;
}

div.app menu .icon {
    width: var(--menu-icon-size);
    height: var(--menu-icon-size);
}

div.app .menu li:first-of-type {
    flex-grow: 1;
}

div.app .menu .b-start span {
    width: 5ch;
    text-align: center;
}
div.app .menu .b-start[data-start="0"] .end {
    display: none;
}
div.app .menu .b-start[data-start="1"] .start {
    display: none;
}

div.app .menu input:focus-visible~span {
    outline: 2px solid var(--color-select);
}

div.app menu {
    margin: 0;
    padding: 0;
    display: flex;
    list-style: none;
    align-items: center;
    gap: 2ch;
}

div.app .configuration {
    grid-row: 1 / 3;
    grid-column: 2;
    background: var(--color-bg);
    border-radius: var(--border-radius-bg);

    display: flex;
    flex-direction: column;
    gap: var(--gap);
}

div.app .configuration menu li:last-of-type {
    flex-grow: 1;
    justify-items: flex-end;
}

div.app .configuration>h2 {
    font-size: var(--font-size);
    padding-block: var(--gap);
    padding-inline: calc(var(--gap) * 2) 0;
}

div.app .configuration .effects {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    padding: var(--gap);
}

div.app .configuration details {
    position: relative;
    border-radius: var(--border-radius-bg);
}
div.app .configuration details[open] {
    padding-bottom: 1ch;
}

div.app .configuration summary {
    display:flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--gap);
    cursor: pointer;

    list-style: none;

    border-radius: var(--visual-radius);
    padding: 1ch;
}


div.app .configuration details>:not(summary) {
    padding: 1ch;
}


div.app .configuration details > summary svg {
    transform: rotate(270deg);
    width: 1ch;
    height: 1ch;
}

div.app .configuration details[open] > summary svg {
    transform: rotate(180deg);
}

div.app .configuration .time .content {
    --font-size: 1.3rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--gap);
}

div.app .configuration .time .eg {
    font-size: var(--font-size);
    letter-spacing: 0.2ch;
    padding: 10px 0 0;
}

div.app .configuration .time [data-changed="0"] menu {
    display: none;
}

.time-input {
    display: flex;
    align-items: center;
}


.time-input p {
    font-size: var(--font-size);
}


div.app .configuration article .range{
    display: flex;
    align-items: center;
    gap: 1ch;
}
div.app .configuration article .range .title {
    width: 3ch;
}
div.app .configuration article .range input {
    flex-grow: 1;
}
div.app .configuration article .range .text {
    width: 9ch;
}

div.app .configuration h4 {
    padding-bottom: 1ch;
}

div.app .configuration :where(.general-buttons,.general-button) {
    --font-size: var(--font-size-config-buttons);
    display: flex;
    flex-wrap: wrap;
}

div.app .configuration .general-buttons {
    justify-content: space-between;
}

div.app .configuration .general-button {
    justify-content: flex-end;
}

div.app .configuration .sets .max-elements {
    display: flex;
    align-items: center;
    gap: 1ch;
}
div.app .configuration .sets .max-elements select {
    border-radius: 1ch;
    padding: .5ch;
    border: 2px solid;
}

div.app .configuration .sets .max-elements :where(select, option) {
    background: var(--color-pri);
    color: var(--color-sec);
}

div.app .configuration .sets table {
    width: 100%;
    --font-size: 1.3rem;
}

div.app .configuration .sets table th {
    padding: 1ch 0;
}

div.app .panel[data-display="0"] {
    display: none;
}

div.app .panel {
    padding: 1ch;
    position: relative;
    grid-column: 1/3;
    grid-row: 3;
}

div.app .panel [name=title] {
    height: 3lh;
    text-align: left;
}


div.app .panel [name=probability] {
    padding: 1ch;
    display: flex;
    align-items: center;
    gap: 1ch;
}

div.app .panel [name=playback] {
    position: relative;
    padding: 1ch 2ch;
}
div.app .panel [name=playback] input:focus-visible {
    outline-offset: .7ch;
}

div.app .panel [name=playback] .time-input {
    --thumb-size: 1.5ch;
    appearance: none;
    position: relative;
    z-index: 1;
    width: calc(100% + var(--thumb-size));
    height: 0;
    margin: 0;
    background: var(--color-bg);
}

div.app .panel [name=playback] .start-time-input {
    transform: translate(calc(-1 * var(--thumb-size)), -2px);
}
div.app .panel [name=playback] .end-time-input {
    transform: translate(0, 2px);
}
div.app .panel [name=playback] .time-input::-webkit-slider-runnable-track {
    height: 0;
}
div.app .panel [name=playback] .time-input::-webkit-slider-thumb {
    appearance: none;
    background: var(--color-text);
    width: var(--thumb-size);
    height: var(--thumb-size);
    border-radius: 50%;
    transform: translateY(-.8ch);
}

div.app .panel [name=playback] .progress {
    position:relative;
    width: 100%;
    height: 1ch;
    overflow: hidden;
    background: var(--color-btn);
    border-radius: 1ch;
}


div.app .panel [name=playback] .progress div {
    height: inherit;
    width: 100%;
}
div.app .panel [name=playback] .progress :where(
    .start-point,
    .end-point,
    .start-time,
    .end-time
) {
    position: absolute;
    inset: 0;
}
div.app .panel [name=playback] .progress .current {
    --translate: 0%;
    background: var(--color-select);
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel [name=playback] .progress .start-point {
    --translate: 0%;
    background: var(--color-hover);
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel [name=playback] .progress .end-point {
    --translate: 100%;
    background: var(--color-hover);
    transform: translateX(var(--translate));
}
div.app .panel [name=playback] .progress :where(.start-time, .end-time) {
    background: var(--color-text);
    opacity: 70%;
}
div.app .panel [name=playback] .progress .start-time {
    --translate: 0%;
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel [name=playback] .progress .end-time {
    --translate: 100%;
    transform: translateX(var(--translate));
}


div.app .panel fieldset {
    --font-size: var(--font-size-config-menu);
    padding: 0;
    margin: 2ch 0;
}

div.app .audio-container {
    grid-row: 2;
    grid-column: 1;

    position:relative;
    display: flex;
    flex-direction: column;
    gap: 1ch;

    font-size: var(--font-size);
    overflow: auto;
    background: var(--color-bg);
    padding: var(--gap);
}

div.app .audio-container:empty::before {
    content: "No Audio Files";
    font-size: 1em;
    font-weight: bold;
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

[data-playing="0"] :where(.lucide-pause, .icon-playing),
[data-playing="1"] :where(.lucide-play, .icon-selected) {
    display:none;
}

.audio {
    --color-audio-text: inherit;
    display: flex;
    align-items: center;
    gap: 1ch;
    font-size: var(--font-size);
    padding: 1ch;
    border-radius: 1ch;
    color: var(--color-audio-text);
}


.audio[data-selected="1"] {
    --color-audio-text: var(--color-select);
}
.audio .pin {
    font-size: var(--font-size-buttons);
    position: relative;
    color: var(--color-audio-text);
}
.audio .pin::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
}

.audio[data-selected="0"] :where(.icon-selected, .icon-playing circle){
    fill: none;
}
.audio .title {
    position:relative;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    color: var(--color-audio-text);
}
.audio .title::after {
    content: "";
    position: absolute;
    height: 1lh;
    width: 3ch;
    right: 0;
    top: 0;
    background: linear-gradient(to left, var(--color-audio-bg), transparent);
}

.audio .icon {
    width: 2ch;
    height: 2ch;
}
/*@end: App elements*/

/*@start: App mediaquery*/
@media (hover: hover) and (pointer: fine) {
    div.app .configuration summary:hover {
        background: var(--color-hover);
        color: var(--color-text-hover);
    }

    div.app .configuration details[open] {
        background: var(--color-btn);
    }

    .audio {
        --color-audio-bg: var(--color-bg);
    }
    .audio:hover {
        --color-audio-bg: var(--color-btn);
        background: var(--color-btn);
    }

    .audio:hover .pin,
    .audio:not(:hover) [name=play] {
        display:none;
    }
    .audio:not(:hover) [name=remove] {
        visibility: hidden;
    }

    .audio .title:hover {
        --color-audio-text: var(--color-text-hover);
        text-decoration: underline;
        cursor: pointer;
    }
}

@media not ((hover:hover) and (pointer:fine)) {
    .audio {
        --color-audio-bg: var(--color-btn);
        background: var(--color-btn);
    }

    div.app .configuration details {
        background: var(--color-btn);
    }
}

@media not (prefers-reduced-motion) {
    .time-input[data-alert="1"] {
        animation: 0.3s linear 0 alert-1;
        animation-iteration-count: 3;
    }
    .time-input[data-alert="2"] {
        animation: 0.3s linear 0 alert-2;
        animation-iteration-count: 3;
    }
    @keyframes alert-1 {
        0%, 50% {
            color: red;
        }
    }
    @keyframes alert-2 {
        0%, 50% {
            color: red;
        }
    }

    div.app .configuration details > summary svg {
        transition: transform .2s linear;
    }
}

@media (min-width: 820.1px) {
    div.app menu {
        padding: var(--gap);
    }
    div.app .menu {
        background: var(--color-bg);
        border-start-start-radius: var(--border-radius-bg);
        border-start-end-radius: var(--border-radius-bg);
    }
    div.app .menu .checkbox input:checked+span {
        opacity: 0.6;
    }
    div.app .menu .checkbox input:checked+span svg {
        fill: none;
    }
    div.app .menu .checkbox input:not(:checked)+span {
        opacity: 1;
    }
    div.app .menu .checkbox input:not(:checked)+span svg {
        fill: currentColor;
    }
    div.app .configuration {
        margin-left: var(--gap);
        width: 340px;
    }
    div.app .configuration[data-show="1"] {
        display: none;
    }

    div.app .audio-container {
        border-end-start-radius: var(--border-radius-bg);
        border-end-end-radius: var(--border-radius-bg);
    }

}

@media (max-width: 820px) {
    div.app {
        grid-template-columns: minmax(0, 1fr);
        grid-template-rows: auto auto 1fr;
    }

    div.app .menu {
        direction: rtl;
        padding: var(--gap) 0;
    }

    div.app .configuration {
        grid-row: 2/4;
        grid-column: 1;
        padding: var(--gap) 2vw;
        z-index: 2;
    }

    div.app .configuration[data-show="0"] {
        display: none;
    }
    div.app .configuration menu {
        padding: var(--gap);
    }
    div.app .configuration .effects {
        line-height: 2;
    }

    div.app .panel {
        grid-column: 1;
        grid-row: 2;
    }
    div.app .audio-container {
        grid-row: 3;
        border-radius: var(--border-radius-bg);
    }
}

@media (max-width: 450px) {
    :root {
        --font-size: 0.8rem;
        --font-size-buttons: 0.7rem;
        --font-size-config-menu: 0.7rem;
        --font-size-config-buttons: 0.7rem;
    }

    div.app menu button,
    div.app menu .button {
        flex-direction: column;
        min-width: 6ch;
        padding: .8ch 1ch;
    }
}
/*@end: App mediaquery*/

/*@start: App supports*/
@supports (height: 1dvh) or (height: 1svh)  {
    body {
        height: 100svh;
        height: 100dvh;
    }

    div.app>.content {
        flex-direction: column-reverse;
    }

    @media (max-width: 820px) {
        div.app {
            grid-template-rows: 1fr auto auto;
        }
        div.app .menu {
            grid-row: 3;
        }
        div.app .configuration {
            grid-row: 1 / 3;
        }

        div.app .audio-container {
            grid-row: 1;
        }

    }
}
/*@end: App supports*/

/*@start: supertags*/
.hidde-interactive {
    position: absolute;
    width: 1px;
    height: 1px;
    opacity: 0;
}

.sr-only {
    clip: rect(0 0 0 0); 
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap; 
    width: 1px;
}

[data-display="0"],
[data-css-hidden] {
    display: none !important;
}
/*@end: supertags*/
