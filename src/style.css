:root {

    --color-dark-base: #060606;
    --color-dark-bg: #121212;
    --color-dark-btn: #282525;
    --color-dark-hover: #3c3838;

    --color-light-base: #f9f9f9;
    --color-light-bg: #f6efef;
    --color-light-btn: #ece3e3;
    --color-light-hover: #e6d8df;

    --color-dark-pink1: #b7005e;
    --color-dark-pink2: #941a59;
    --color-dark-pink2-a: #941a5933;
    --color-dark-audio-select: #457672;
    --color-light-pink1: #ff99cd;
    --color-light-pink2: #ffc0e0;
    --color-light-pink2-a: #ffc0e033;
    --color-light-audio-select: #b7fff9;


    --color-base: var(--color-dark-base);
    --color-bg: var(--color-dark-bg);
    --color-text: var(--color-light-bg);
    --color-btn: var(--color-dark-btn);
    --color-hover: var(--color-dark-hover);
    --color-text-hover: var(--color-light-pink2);
    --color-highlight: var(--color-light-pink2-a);
    --color-select: var(--color-light-pink1);
    --color-audio-select: var(--color-light-audio-select);

    --scrollbar-bg: var(--color-btn) var(--color-bg);
    --scrollbar-base: var(--color-btn) var(--color-base);

    --fallback-fonts: Helvetica Neue, helvetica, arial, Hiragino Kaku Gothic ProN, Meiryo, MS Gothic;
    --font: var(--fallback-fonts, sans-serif);

    --font-size: 1rem;
    --font-size-buttons: 1rem;

    --visual-radius: 5px;

    --default-icon-size: 2.5ch;
    --summary-icon-size: 1.8ch;
    --checkbox-icon-size: 1.5ch;

    --gap: 1ch;
    --border-radius-bg: 1ch;

    accent-color: var(--color-text);
    color-scheme: dark;
}

/*@start: theme*/
@media (prefers-color-scheme: dark) {
    :root[data-theme=light] {
        --color-base: var(--color-light-base);
        --color-bg: var(--color-light-bg);
        --color-text: var(--color-dark-bg);
        --color-btn: var(--color-light-btn);
        --color-hover: var(--color-light-hover);
        --color-text-hover: var(--color-dark-pink2);
        --color-highlight: var(--color-dark-pink2-a);
        --color-select: var(--color-dark-pink1);
        --color-audio-select: var(--color-dark-audio-select);
        color-scheme: light;
    }
    :root:not([data-theme=light]) .theme-switcher .lucide-moon,
    :root[data-theme=light] .theme-switcher .lucide-sun {
        display: none;
    }
}

@media not (prefers-color-scheme: dark) {
    :root {
        --color-base: var(--color-light-base);
        --color-bg: var(--color-light-bg);
        --color-text: var(--color-dark-bg);
        --color-btn: var(--color-light-btn);
        --color-hover: var(--color-light-hover);
        --color-text-hover: var(--color-dark-pink2);
        --color-highlight: var(--color-dark-pink2-a);
        --color-select: var(--color-dark-pink1);
        --color-audio-select: var(--color-dark-audio-select);
        color-scheme: light;
    }
    :root[data-theme=dark] {
        --color-base: var(--color-dark-base);
        --color-bg: var(--color-dark-bg);
        --color-text: var(--color-light-bg);
        --color-btn: var(--color-dark-btn);
        --color-hover: var(--color-dark-hover);
        --color-select: var(--color-light-pink1);
        --color-text-hover: var(--color-light-pink2);
        --color-highlight: var(--color-light-pink2-a);
        --color-audio-select: var(--color-light-audio-select);
        color-scheme: dark;
    }
    :root:not([data-theme=dark]) .theme-switcher .lucide-sun,
    :root[data-theme=dark] .theme-switcher .lucide-moon {
        display: none;
    }
}
/*@end: theme*/

/*@start: default*/
label,input, select, option {
    cursor: pointer;
}

input[type="range"] {
    height: 4px;
}
input[type="range"]:focus-visible {
    outline-offset: 1ch;
    border-radius: var(--visual-radius);
}

.button,
button {
    box-sizing: border-box;
    margin: 0;
    background: var(--color-btn);
    color: inherit;

    font-family: inherit;
    font-size: var(--font-size-buttons);
    font-weight: bold;
    text-decoration: none;

    cursor: pointer;

    border: none;
    border-radius: .5ch;

    position: relative;
    line-height: inherit;
}

.button::after,
button::after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
}

a {
    color: var(--color-text);
    border-radius: var(--visual-radius);
    font-size: var(--font-size);
}

:where(a, button, summary, input[type="range"], select):focus-visible {
    outline: 2px solid var(--color-select);
}

h1 {
    font-size: 1.5em;
}

h1, h2, h3, h4, p, span {
    margin: 0;
    font-weight: bold;
}

@media (hover: hover) and (pointer: fine){
    a:hover {
        color: var(--color-text-hover);
    }
    .button:hover,
    button:hover {
        color: var(--color-text-hover);
        background: var(--color-hover);
    }
    input[type="range"]:hover {
        accent-color: var(--color-select);
    }
}

@media not (prefers-reduced-motion) {
    .button,
    button,
    a,
    summary{
        transition: background 200ms ease-in-out,
                    color 200ms ease-in-out;
    }
}
/*@end: defaults*/

/*@start: base*/
body {
    margin: 0;
    padding: 0;

    display: flex;
    flex-direction: column;

    width: 100%;
    height: 100vh;

    font-family: var(--font);
    font-weight: normal;

    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background-color:var(--color-base);
    color: var(--color-text);

    -webkit-tap-highlight-color: var(--color-highlight);
    user-select: none;
    touch-action: none;
}

body>main {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

body>main[data-app="0"] .app,
body>main[data-app="1"] .presentation {
    display: none
}

/*@end: base*/

/*@start: components*/
.icon {
    width: var(--default-icon-size);
    height: var(--default-icon-size);
}
.button-text {
    padding: .5ch 1ch;
}
.button-icon {
    display: flex;
    align-items: center;
    padding: .5ch;
    width: min-content;
}

.button-icon-text {
    display: flex;
    align-items: center;
    gap: 0.5ch;
    padding: .5ch 1ch;
}

.checkboxes {
    display:flex;
    flex-wrap: wrap;
    height1ch;
    border: none;
    margin: 0;
    padding: 0;
}

.checkbox, .b-file {
    position: relative;
}

.checkbox>span {
    display: flex;
    align-items: center;
    gap: 0.5ch;
}

.checkbox input:focus-visible+span {
    outline: 2px solid var(--color-select);
}

.checkbox input:not(:checked)+span {
    opacity: 0.6;
}

.checkbox .icon-checkbox {
    width: var(--checkbox-icon-size);
    height: var(--checkbox-icon-size);
}

.checkbox input:not(:checked)+span .icon {
    fill: none;
}

.scroll-buttons {
    display: flex;
    align-items: center;
    gap: 1ch;
    text-align: center;
}

.scroll-buttons button {
    display: flex;
    align-items: center;
}
.scroll-buttons p {
    width: 3ch;
}

.scroll-buttons button .icon {
    width: var(--checkbox-icon-size);
    height: var(--checkbox-icon-size);
}

.scroll-buttons button.left .icon {
    transform: rotate(-.25turn);
}

.scroll-buttons button.right .icon {
    transform: rotate(.25turn);
}

.range-number {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-width: 2cap;
}
.range-number button {
    width: 100%;
    justify-content: center;
}
.range-number .icon {
    width: var(--checkbox-icon-size);
    height: var(--checkbox-icon-size);
}

.range-number .down {
    transform: rotate(.5turn);
}

/*@end: App components*/

/*@start: presentation*/
.presentation {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 1ch;
    background: var(--color-bg);
    padding: 1ch;
    overflow: auto;
    scrollbar-color: var(--scrollbar-bg);
}

.presentation header {
    display: flex;
    text-align: center;
    flex-direction: column;
    align-items: center;
}

.presentation header svg {
    width: min(20vh, 120px);
    height: min(20vh, 120px);
}

.presentation :where(a,p) {
    line-height: 2;
}


@media (scripting: none) {
    .presentation button {
        display: none;
    }
}
/*@end: presentation*/

/*@start: App elements*/
.drop-area {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    background: var(--color-bg);
    opacity: 0.5;
    z-index: 5;
}

.drop-area::after {
    content: "";
    display: block;
    position: absolute;
    inset: auto;
    width: 100%;
    height: 100%;
}
div.app {
    position: relative;
    overflow: hidden;
    flex-grow: 1;

    display: grid;
    grid-template: auto 1fr auto / minmax(0, 1fr) auto;

    padding: 1ch;
}

div.app .audio-container,
div.app .configuration .effects,
div.app .panel [name="title"]{
    box-sizing: border-box;
    overflow: auto;
    scroll-behavior: smooth;
}

div.app .audio-container,
div.app .configuration {
    scrollbar-color: var(--scrollbar-bg);
}
div.app .panel [name="title"]{
    scrollbar-color: var(--scrollbar-base);
}


div.app .menu {
    grid-row: 1;
    grid-column: 1;
}

div.app .menu li:first-of-type {
    flex-grow: 1;
}

div.app .menu .b-start span {
    width: 5ch;
    text-align: center;
}
div.app .menu .b-start[data-start="0"] .end {
    display: none;
}
div.app .menu .b-start[data-start="1"] .start {
    display: none;
}

div.app .menu input:focus-visible~span {
    outline: 2px solid var(--color-select);
}

div.app menu {
    margin: 0;
    padding: 0;
    display: flex;
    list-style: none;
    align-items: center;
    gap: 2ch;
}

div.app .configuration {
    grid-row: 1 / 3;
    grid-column: 2;
    background: var(--color-bg);
    border-radius: var(--border-radius-bg);

    display: flex;
    flex-direction: column;
    gap: var(--gap);
}

div.app .configuration menu li:last-of-type {
    flex-grow: 1;
    justify-items: flex-end;
}

div.app .configuration>h2 {
    font-size: var(--font-size);
    padding-block: var(--gap);
    padding-inline: calc(var(--gap) * 2) 0;
}

div.app .configuration .effects {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    padding: var(--gap);
}

div.app .configuration details {
    position: relative;
    border-radius: var(--border-radius-bg);
}
div.app .configuration details[open] {
    padding-bottom: 1ch;
}

div.app .configuration summary {
    display:flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--gap);
    cursor: pointer;

    list-style: none;

    border-radius: var(--visual-radius);
    padding: 1ch;
}


div.app .configuration details>:not(summary) {
    padding: 1ch;
}


div.app .configuration details > summary .icon {
    transform: rotate(270deg);
    width: var(--summary-icon-size);
    height: var(--summary-icon-size);
}

div.app .configuration details[open] > summary .icon {
    transform: rotate(180deg);
}

div.app .configuration .time .content {
    --font-size: 1.3rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--gap);
}

div.app .configuration .time .eg {
    font-size: var(--font-size);
    letter-spacing: 0.2ch;
    padding: 10px 0 0;
}

div.app .configuration .time [data-changed="0"] menu {
    display: none;
}

.time-input {
    display: flex;
    align-items: center;
}


.time-input p {
    font-size: var(--font-size);
}


div.app .configuration article .range{
    display: flex;
    align-items: center;
    gap: 1ch;
}
div.app .configuration article .range .title {
    width: 3ch;
}
div.app .configuration article .range input {
    flex-grow: 1;
}
div.app .configuration article .range .text {
    width: 9ch;
}

div.app .configuration h4 {
    padding-bottom: 1ch;
}

div.app .configuration :where(.general-buttons,.general-button) {
    display: flex;
    flex-wrap: wrap;
}

div.app .configuration .general-buttons {
    justify-content: space-between;
}

div.app .configuration .general-button {
    justify-content: flex-end;
}

div.app .configuration .sets .scroll-buttons {
    justify-content: center;
}

div.app .configuration .sets .max-elements {
    display: flex;
    align-items: center;
    gap: 1ch;
    padding: .7ch;
    border-radius: .5ch;
}
div.app .configuration [data-elements="1"] .max-elements svg {
    transform: rotate(.5turn);
}
div.app .configuration [data-elements="0"] .elements-radios {
    display: none;
}
div.app .configuration [data-elements="1"] .elements-radios {
    display: flex;
    flex-wrap: wrap;
    gap: 1ch;
}

div.app .configuration .radio {
    padding: .7ch;
    border: 1px solid var(--color-hover);
    border-radius: .5ch;
    width: 2ch;
    line-height: 1;
    text-align: center;
}
div.app .configuration .radio:has(input:checked) {
    color: var(--color-select);
    border-color: var(--color-select);
}

div.app .configuration .sets table {
    width: 100%;
    --font-size: 1.3rem;
}

div.app .configuration .sets table th {
    padding: 1ch 0;
}

div.app .panel[data-display="0"] {
    display: none;
}

div.app .panel {
    position: relative;
    grid-column: 1/3;
    grid-row: 3;

    display: grid;
    align-items: center;

    padding: var(--panel-gap);
    gap: var(--panel-gap);
}

div.app .panel>.title {
    --color-audio-text: inherit;
    color: var(--color-audio-text);
}

div.app .panel [name=volume] {
    display: flex;
    align-items: center;
    gap: .5ch;
}
div.app .panel [name=probability] {
    display: flex;
    gap: var(--gap);
}


div.app .panel [name=effects] {
    margin: 0;

    display: grid;
    grid-template: repeat(2, 1fr) / repeat(3, 1fr);
    gap: var(--gap);
}

div.app .panel [name=effects] span {
    text-wrap-mode: nowrap;
}


div.app .panel [name=playback] {
    box-sizing: border-box;
    padding: 0 2ch;
    width: 100%;
}
div.app .panel [name=playback] .current-text {
    text-align: center;
}

div.app .panel .time-text {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-bottom: var(--gap);
}
div.app .panel .range {
    position: relative;
}
div.app .panel .ranges input:focus-visible {
    outline-offset: .7ch;
}

div.app .panel .ranges .time-input {
    --thumb-size: 1.5ch;
    appearance: none;
    position: relative;
    z-index: 1;
    width: calc(100% + var(--thumb-size));
    margin: 0;
    background: transparent;
}

div.app .panel .ranges .start-time-input {
    transform: translate(calc(-1 * var(--thumb-size)), -2px);
}
div.app .panel .ranges .end-time-input {
    transform: translate(0, 2px);
}

div.app .panel .ranges .bars {
    position:relative;
    width: 100%;
    height: 1ch;
    overflow: hidden;
    background: var(--color-btn);
    border-radius: 1ch;
}


div.app .panel .ranges .bars div {
    height: inherit;
    width: 100%;
}
div.app .panel .ranges :where(
    .start-point,
    .end-point,
    .start-time,
    .end-time
) {
    position: absolute;
    inset: 0;
}
div.app .panel .ranges .current {
    --translate: 0%;
    background: var(--color-select);
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel .ranges .start-point {
    --translate: 0%;
    background: var(--color-hover);
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel .ranges .end-point {
    --translate: 100%;
    background: var(--color-hover);
    transform: translateX(var(--translate));
}
div.app .panel .ranges :where(.start-time, .end-time) {
    background: var(--color-text);
    opacity: 70%;
}
div.app .panel .ranges .start-time {
    --translate: 0%;
    transform: translateX(calc(-100% + var(--translate)));
}
div.app .panel .ranges .end-time {
    --translate: 100%;
    transform: translateX(var(--translate));
}

div.app .panel [name=playback]:has( .start-time-input:active) .time-text [name=start-time],
div.app .panel [name=playback]:has( .end-time-input:active) .time-text [name=end-time] {
    color: var(--color-select);
}
div.app .panel .ranges:has( .start-time-input:active) .start-time,
div.app .panel .ranges:has( .end-time-input:active) .end-time {
    background: var(--color-select)!important;
}

div.app .panel [name=controls] {
    display: flex;
    align-items: center;
    justify-content: center;
    align-items: flex-start;
    gap: calc(var(--gap) * 2);
}

div.app .panel [name=controls] :where(.prev, .next) {
    background: transparent;
}
div.app .panel [name=controls][data-scroll="0"] :where(.next, .prev) {
    display: none;
}

div.app .panel [name=close] {
    position: absolute;
    right: var(--panel-gap);
}

div.app .audio-container {
    grid-row: 2;
    grid-column: 1;

    position:relative;
    display: flex;
    flex-direction: column;
    gap: 1ch;

    font-size: var(--font-size);
    overflow: auto;
    background: var(--color-bg);
    padding: var(--gap);
}

div.app .audio-container:empty::before {
    content: "No Audio Files";
    font-size: 1em;
    font-weight: bold;
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

[data-playing="0"] :where(.lucide-pause, .icon-playing),
[data-playing="1"] :where(.lucide-play, .icon-selected) {
    display:none;
}

.audio {
    --color-audio-text: inherit;
    display: flex;
    align-items: center;
    gap: 1ch;
    font-size: var(--font-size);
    padding: 1ch;
    border-radius: 1ch;
    color: var(--color-audio-text);
}


.audio[data-selected="1"] {
    --color-audio-text: var(--color-select);
}
.audio .pin {
    font-size: var(--font-size-buttons);
    color: var(--color-audio-text);
}
.audio :where(.pin, .probability) {
    position: relative;
}
.audio :where(.pin, .probability)::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 0;
}

.audio[data-selected="0"] :where(.icon-selected, .icon-playing circle){
    fill: none;
}
.audio .title {
    position:relative;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    color: var(--color-audio-text);
}
.audio .title::after {
    content: "";
    position: absolute;
    height: 1lh;
    width: 3ch;
    right: 0;
    top: 0;
    background: linear-gradient(to left, var(--color-audio-bg), transparent);
}

/*@end: App elements*/

/*@start: App mediaquery*/
@media (min-height: 380.1px) {
    @media (min-width: 1279.1px) {
        :root {
            font-size: .9vw;
        }
        div.app .panel {
            grid-template-columns: 1fr 2fr 1fr;
            grid-template-rows: auto;
        }
        div.app .panel .title {
            max-height: 4lh;
        }
    }
    @media (min-width: 920.1px) and (max-width: 1280px) {
        :root {
            font-size: 14px;
        }
        div.app .panel {
            grid-template-columns: 1fr auto;
            grid-template-rows: auto auto;
        }
        div.app .panel .title {
            max-height: 3lh;
            grid-row: 1;
            grid-column: 1/3;
            margin-right: calc(var(--panel-gap) * 3);
        }
        div.app .panel .module-playback {
            grid-row: 2;
            grid-column: 1;
        }
        div.app .panel .module-options {
            grid-row: 2;
            grid-column: 2;
        }
    }
    @media (min-width: 920.1px) {
        div.app menu {
            padding: var(--gap);
        }
        div.app .menu {
            background: var(--color-bg);
            border-start-start-radius: var(--border-radius-bg);
            border-start-end-radius: var(--border-radius-bg);
        }
        div.app .menu .checkbox input:checked+span {
            opacity: 0.6;
        }
        div.app .menu .checkbox input:checked+span svg {
            fill: none;
        }
        div.app .menu .checkbox input:not(:checked)+span {
            opacity: 1;
        }
        div.app .menu .checkbox input:not(:checked)+span svg {
            fill: currentColor;
        }
        div.app .configuration {
            margin-left: var(--gap);
            width: 24vw;
            min-width: 340px;

        }
        div.app .configuration[data-show="1"] {
            display: none;
        }

        div.app .audio-container {
            border-end-start-radius: var(--border-radius-bg);
            border-end-end-radius: var(--border-radius-bg);
        }
        div.app .panel {
            --panel-gap: 2ch;
            justify-content: space-between;
        }
        div.app .panel .module-playback {
            display: flex;
            flex-direction: column-reverse;
            align-items: center;
        }
        div.app .panel .module-options {
            display: grid;
            grid-template-columns: auto;
            grid-template-rows: repeat(3, auto);
            grid-auto-flow: column;
            gap: 1ch;
        }
        div.app .panel [name=probability] {
            align-self: end;
        }
        div.app .panel [name=volume] input {
            width: 50%;
        }
        div.app .panel [name=close] {
            top: var(--panel-gap);
        }
    }
}

@media (max-width: 920px), (max-height: 380px) {
    :root {
        font-size: 12px;
    }
    div.app {
        grid-template: auto auto 1fr / minmax(0,1fr)
    }

    div.app .menu {
        direction: rtl;
        padding: 0 0 var(--gap);
    }

    div.app .configuration {
        grid-row: 2/4;
        grid-column: 1;
        padding: var(--gap) 2vw;
        z-index: 2;
    }

    div.app .configuration h2 {
        display: none;
    }

    div.app .configuration[data-show="0"] {
        display: none;
    }
    div.app .configuration menu {
        padding: var(--gap);
    }
    div.app .configuration .effects {
        line-height: 2;
    }

    div.app .panel {
        --panel-gap: 1ch;
        grid-column: 1;
        grid-row: 2;
    }
    div.app .panel .title {
        max-height: 3lh;
        grid-row: 1;
    }
    div.app .panel .module-playback {
        grid-row: 3;
    }
    div.app .panel [name=playback] {
        padding-bottom: 1ch;
    }
    div.app .panel .module-options {
        grid-row: 2;
        display: grid;
        grid-template: auto auto / auto auto;
        grid-auto-flow: column;
        gap: 1ch;
    }
    div.app .panel [name=effects] {
        grid-row: 1/3;
    }

    div.app .panel [name=close] {
        bottom: var(--panel-gap);
        transform: rotate(.5turn);
    }
    div.app .audio-container {
        grid-row: 3;
        border-radius: var(--border-radius-bg);
    }
}

@media (max-width: 450px) {
    div.app .panel {
        padding: var(--gap) 0;
    }
    div.app .panel .module-options {
        grid-template: repeat(3, auto) / auto;
    }
    div.app .panel [name=effects] {
        grid-row: unset;
    }
    div.app menu button,
    div.app menu .button {
        flex-direction: column;
        min-width: 6ch;
        padding: .8ch 1ch;
    }
}

@media (max-height: 380px) and (min-width: 460px) {
    div.app {
        grid-template: auto 1fr / 1fr auto;
    }
    div.app .menu {
        grid-row: 1;
        grid-column: 1/3;
    }
    div.app .configuration {
        grid-row: 2;
        grid-column: 1/3;
        overflow: hidden;
    }
    div.app .audio-container {
        grid-row: 2;
        grid-column: 1;
        min-width: 150px;
    }
    div.app .panel {
        grid-row: 2;
        grid-column: 2;
        width: min(50vw, 300px);
        padding: 0 0 0 var(--gap);
    }
    div.app .panel .module-options {
        display: flex;
        flex-direction: column;
    }
    div.app .panel [name=close] {
        transform: rotate(-.25turn);
    }
}

@media (hover: hover) and (pointer: fine) {
    div.app .configuration summary:hover {
        background: var(--color-hover);
        color: var(--color-text-hover);
    }

    div.app .configuration details[open] {
        background: var(--color-btn);
    }

    div.app .configuration .sets .max-elements:hover {
        background: var(--color-hover);
    }
    div.app .configuration .radio:hover {
        color: var(--color-text-hover);
        background: var(--color-hover);
    }

    div.app .panel .ranges:has( .start-time-input:hover) .start-time,
    div.app .panel .ranges:has( .end-time-input:hover) .end-time {
        background: var(--color-text-hover)
    }

    div.app .panel .ranges .time-input:hover::-webkit-slider-thumb {
        background: var(--color-text-hover);
    }

    div.app .panel .ranges .time-input:hover::-moz-range-thumb {
        background: var(--color-text-hover);
    }

    div.app .panel [name=controls] :where(.prev, .next):hover {
        background: var(--color-hover);
    }

    .audio {
        --color-audio-bg: var(--color-bg);
    }
    .audio:hover {
        --color-audio-bg: var(--color-btn);
        --color-audio-text: var(--color-text-hover);
        background: var(--color-btn);
        cursor: pointer;
    }

    .audio:hover .pin,
    .audio:not(:hover) [name=play] {
        display:none;
    }
    .audio:not(:hover) [name=remove] {
        visibility: hidden;
    }

    .audio:hover .title {
        text-decoration: underline;
    }
}

@media not ((hover:hover) and (pointer:fine)) {
    .audio {
        --color-audio-bg: var(--color-btn);
        background: var(--color-btn);
    }

    div.app .configuration details {
        background: var(--color-btn);
    }
}

@media not (prefers-reduced-motion) {
    div.app .configuration details > summary svg {
        transition: transform .2s linear;
    }
}
/*@end: App mediaquery*/

/*@start: App supports*/
@supports (height: 1dvh) or (height: 1svh)  {
    body {
        height: 100svh;
        height: 100dvh;
    }

    div.app>.content {
        flex-direction: column-reverse;
    }


    @media (max-width: 920px) {
        div.app {
            grid-template: 1fr auto auto / auto;
        }
        div.app .menu {
            grid-row: 3;
            padding: var(--gap) 0 0;
        }
        div.app .configuration {
            grid-row: 1 / 3;
        }

        div.app .audio-container {
            grid-row: 1;
        }
        div.app .panel [name=close] {
            transform: rotate(0);
        }
    }
    @media (max-height: 380px) and (min-width: 460px) {
        div.app {
            grid-template: 1fr auto / 1fr auto;
        }
        div.app .menu {
            grid-row: 2;

        }
        div.app .configuration {
            grid-row: 1;
        }
        div.app .audio-container {
            grid-row: 1;
        }
        div.app .panel {
            grid-row: 1;
        }
        div.app .panel [name=close] {
            transform: rotate(-.25turn);
        }
    }
}
/*@end: App supports*/

/*@start: supertags*/
.hidde-interactive {
    position: absolute;
    width: 1px;
    height: 1px;
    opacity: 0;
}

.sr-only {
    clip: rect(0 0 0 0); 
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap; 
    width: 1px;
}

[data-display="0"],
[data-css-hidden] {
    display: none !important;
}
/*@end: supertags*/
